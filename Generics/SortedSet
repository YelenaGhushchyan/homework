public class MySortedSet<T> where T : IComparable<T>
{
    private T[] _items;
    public int Count { get; private set; }
    public T? Max => Count > 0 ? _items[Count - 1] : default;
    public T? Min => Count > 0 ? _items[0] : default;


    public MySortedSet(int capacity)
    {
        _items = new T[capacity];
        Count = 0;
    }

    public void MyAdd(T item)
    {
        for (int i = 0; i < Count; i++)
        {
            if (_items[i].CompareTo(item) == 0)
            {
                return;
            }
        }

        if (Count == _items.Length)
        {
            T[] newArray = new T[_items.Length * 2];
            for (int i = 0; i < Count; i++)
            {
                newArray[i] = _items[i];
            }

            _items = newArray;
        }

        _items[Count++] = item;

        for (int i = 0; i < Count - 1; i++)
        {
            for (int j = i + 1; j < Count; j++)
            {
                if (_items[i].CompareTo(_items[j]) > 0)
                {
                    T temp = _items[i];
                    _items[i] = _items[j];
                    _items[j] = temp;
                }
            }
        }
    }
    public void Print()
    {
        for (int i = 0; i < Count; i++)
        {
            Console.WriteLine(_items[i]);
        }
    }
    public bool Contains(T item)
    {
        for (int i = 0; i < Count; i++)
        {
            if (_items[i].CompareTo(item) == 0)
                return true;
        }
        return false;
    }
    public T? GetMax() => Max;
    public T? GetMin() => Min;
}

public class Product : IComparable<Product>
{
    public string Name { get; }
    public int Price { get; }

    public Product(string name, int price)
    {
        Name = name;
        Price = price;
    }

    public int CompareTo(Product? other)
    {
        if (this.Price < other.Price) return -1;
        if (this.Price > other.Price) return 1;
        return 0;
    }
    public override string ToString()
    {
        return $"{Name} ({Price})";
    }
    
}
class Program
{
    static void Main()
    {
        MySortedSet<Product> products = new MySortedSet<Product>(5);

        products.MyAdd(new Product("Laptop", 1500));
        products.MyAdd(new Product("Smartphone", 800));
        products.MyAdd(new Product("Tablet", 500));
        products.MyAdd(new Product("Headphones", 100));
        products.MyAdd(new Product("Watch", 200));
        products.MyAdd(new Product("TV", 200));
        

        Console.WriteLine("Sorted Products by Price:");
        products.Print();

        Console.WriteLine("\nContains 'Smartphone' (800): " + products.Contains(new Product("Smartphone", 800)));
        Console.WriteLine("Contains 'Camera' (600): " + products.Contains(new Product("Camera", 600)));

        Console.WriteLine("\nMax Product: " + products.Max);
        Console.WriteLine("Min Product: " + products.Min);
    }
}
