class MyProgram
{
    static bool BinarySearch(int[] arr, int n, int target)
    {
        int left = 0;
        int right = arr.Length - 1;

        while (left <= right)
        {
            int mid = left + (right - left) / 2;
            if (arr[mid] == target)
            {
                return true ;
            }
            else if (arr[mid] > target)
            {
                right = mid - 1;
            }
            else
            {
                left = mid + 1;
            }
        }

        return false;
    }

    static bool RecursiveBinary(int[] arr, int n, int target, int start, int end)
    {
        if (start > end)
        {
            return false;
        }

        int mid = start + (end - start) / 2;
        if (arr[mid] == target)
        {
            return true;
        }
        else if (arr[mid] > target)
        {
            return RecursiveBinary(arr, n, target, start, mid - 1);
        }
        else
        {
            return RecursiveBinary(arr, n, target, mid + 1, end);
        }
    }

    public static void Main()
    {
        int[] arr = new[] { 2, 5, 7, 9, 19, 34,78,45};
        int target = 34;
        bool found = BinarySearch(arr, arr.Length, target);
        if (found)
            Console.WriteLine($" {target} is found:");
        else
            Console.WriteLine($" {target} is not found:");
        int target1 = 20;
        bool found1 = RecursiveBinary(arr, arr.Length, target1, 0, 7);
        if (found1)
            Console.WriteLine($" {target1} is found:");
        else
            Console.WriteLine($" {target1} is not found:");
        
        

    }
}
